{"version":3,"sources":["scripts/main.js"],"names":["body","document","querySelector","waitFor","element","eventName","promise","Promise","resolve","reject","addEventListener","nodeName","id","printMessage","message","notification","createElement","className","textContent","append","module","exports"],"mappings":";AAAA,aAEA,IAAMA,EAAOC,SAASC,cAAc,QAEpC,SAASC,EAAQC,EAASC,GAQjBC,OAPS,IAAIC,QAAQ,SAACC,EAASC,GACpCL,EAAQM,iBAAoBL,GAAAA,OAAAA,GAAa,WACvCG,EAAQ,UAAUH,OAAAA,EACZD,oBAAAA,IAAAA,OAAAA,EAAQO,SAAiBP,UAAAA,OAAAA,EAAQQ,GADhC,UAQb,IAAMC,EAAe,SAACC,GACdC,IAAAA,EAAed,SAASe,cAAc,OAE5CD,EAAaE,UAAY,UACzBF,EAAaG,YAAcJ,EAC3Bd,EAAKmB,OAAOJ,IAGdK,OAAOC,QAAU,CACflB,QAAAA,EACAU,aAAAA","file":"main.6c597e79.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst body = document.querySelector('body');\n\nfunction waitFor(element, eventName) {\n  const promise = new Promise((resolve, reject) => {\n    element.addEventListener(`${eventName}`, () => {\n      resolve(`It was ${eventName} on the element:`\n      + ` ${element.nodeName}, id: ${element.id}.`);\n    });\n  });\n\n  return promise;\n}\n\nconst printMessage = (message) => {\n  const notification = document.createElement('div');\n\n  notification.className = 'message';\n  notification.textContent = message;\n  body.append(notification);\n};\n\nmodule.exports = {\n  waitFor,\n  printMessage,\n};\n"]}